#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long qw(HelpMessage GetOptions);

use Cwd qw(abs_path);
use File::Basename qw(dirname);
use lib dirname(abs_path($0)); # add ./ to @INC

use Ciff qw(genciff);


my $out;
my $caption = "no caption";
my @tags;
GetOptions(
    'caption=s' => \$caption,
    'tag=s'     => \@tags,
    'output=s'  => \$out,
    'help'      => sub { HelpMessage(0) },
) or HelpMessage(1);

HelpMessage(1) unless (@ARGV == 3);
my ($type, $width, $height) = @ARGV;

my $fh;
if ($out) {
    open($fh, '>', $out) or die "Failed to open output file";
} else {
    open($fh, '>&', \*STDOUT) or die "Failed to open stdout";
}
print $fh genciff $width, $height, $caption, \@tags, $type;


=pod

=head1 NAME

gentest - generate simple CIFF test images

=head1 SYNOPSIS

gentest [-h] [-o output] [-c caption] [-t tag] type width height

  --help,-h     Show this help message
  --caption,-c  Image caption (default is 'no caption')
  --tag,-t      Image tag (this option can be specified multiple times)
  --output,-o   Output file (default is stdout)

  type          One of {red, huflag, itflag, danger} (mandatory)
  width         Image width (mandatory)
  height        Image height (mandatory)

=head1 CAVEATS

The entire array of pixels is stored in memory before writing, so the
script currently cannot be used to generate large CIFFs.

=head1 VERSION

0.01

=cut
