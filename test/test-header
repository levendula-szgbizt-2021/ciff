#!/usr/bin/env perl

use strict;
use warnings;
use 5.32.0;

use File::Temp qw(tempfile);
use Getopt::Long qw(GetOptions);

use Cwd qw(abs_path);
use File::Basename qw(dirname);
use lib dirname(abs_path($0)); # add ./ to @INC

use TestUtil qw(status);


# parse arguments
my $verb = 0;
GetOptions('verbose' => \$verb);

# set ciff binary
my $ciff = $ENV{CIFF} || '../ciff';

# get temoporary file
(my $fh, my $tmp) = tempfile();

# trap SIGINT to remove the temporary file
$SIG{INT} = sub { unlink $tmp };

# expected results
my %exp = (
    width       => 1024,
    height      => 768,
    cap         => 'redsquare',
    tags        => [qw(solid red colour)],
);

# actual results
my $tagargs = '-t ' . join ' -t ', @{$exp{tags}};
system("./gentest -c $exp{cap} $tagargs -o $tmp"
  . " red $exp{width} $exp{height}")
  == 0 or die "gentest script returned with $?";
my $result = `$ciff -v <$tmp 2>&1`;
my %act;
($act{width}, $act{height}, $act{cap}, $act{tags})
= ($result =~ /width:\s*(\d+).*height:\s*(\d+).*caption:\s*(\w+).*tags:\s*((\[\w+\]\s*)+)/is);
$act{tags} =~ s/\]\s*\[/,/g;
$act{tags} =~ s/[\[\]]//g;
$act{tags} = [split ',', $act{tags}];

# compare
for my $key (qw(width height)) {
    status($key, $exp{$key}, $act{$key}, $exp{$key} == $act{$key},
      $verb);
}
status('cap', $exp{cap}, $act{cap}, $exp{cap} eq $act{cap}, $verb);
status('tags', $exp{tags}, $act{tags}, @{$exp{tags}} == @{$act{tags}},
  $verb);
